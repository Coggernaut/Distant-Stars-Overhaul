# Planet District Zones

# zone_test_01 = {
#   potential = {                           # Trigger that defines whether the zone can potentially be built on the Planet. Scope = Planet
#       always = yes
#   }
#
#   unlock = {                              # Trigger that defines whether the zone is unlocked for building on the planet. Scope = Planet
#       always = yes
# 	}
#
# 	resources = {                           # Cost of building. Scope = Planet
#       category = planet_districts
# 		cost = {
# 			minerals = 50
# 		}
# 	}
#
#   max_buildings = 3      					# Number of slots for buildings.
#
#   planet_modifier = {						# Planet modifier from the zone
#   }
#
#   triggered_planet_modifier = { 			# Triggered planet modifier from the zone. Scope = Planet
#       potential = {
#           always = yes
#       }
#   }
#
#   district_planet_modifier = {    		# Planet modifier from the zone. Modifier value is multiplied by the District Level
#   }
#
#   triggered_district_planet_modifier = {  # Triggered planet modifier from the zone. Modifier value is multiplied by the District Level. Scope = Planet
#       potential = {
#           always = yes
#       }
#   }
#
#   country_modifier = {					# Country modifier from the zone
#   }
#
#   triggered_country_modifier = { 			# Triggered country modifier from the zone. Scope = Planet
#       potential = {
#           always = yes
#       }
#   }
#
#   district_country_modifier = {    		# Country modifier from the zone. Modifier value is multiplied by the District Level
#   }
#
#   triggered_district_country_modifier = {  # Triggered country modifier from the zone. Modifier value is multiplied by the District Level. Scope = Planet
#       potential = {
#           always = yes
#       }
#   }
#
#   triggered_planet_pop_group_modifier_for_all = { } See documentation in buildings file
#   triggered_planet_pop_group_modifier_for_species = { } See documentation in buildings file
#
#   include = {    }                       # Buildings listed here can be constructed in this zone.
#
#   exclude = {    }                       # Buildings listed here cannot be constructed in this zone.
#
#   included_building_sets = {
#                                           # Buildings belonging to any building set listed here can be constructed in this zone.
#    }
#
#   excluded_building_sets = {
#                                           # Buildings belonging to any building set listed here cannot be constructed in this zone.
#    }
#
#   zone_sets = {                           # All zones must belong to at least one zone set
#                                           # Zone sets are used to determine in which slots zones can be built
#   }
#
#	triggered_desc = {       		        # Triggered description of the zone's effect. Scope = Planet
#		trigger = {
#			exists = owner
#		}
#		text = job_clerk_effect_desc
#	}

#	empire_limit = { 	#optional: default is no limit
#		base = 5		#don't set base to less than 0, it will ignore it (for performance optimisation reasons)
#		modifier = { 	#triggers are country scope
#			add/factor = 2
#			has_country_flag = test_flag
#		}
#		# Mult by -1 to remove limit
#	}

#	planet_limit = { 	# optional: default is no limit
#		base = 5
#		modifier = { 	# triggers are planet scope
#			add/factor = 2
#			has_planet_flag = test_flag
#		}
#		# Mult by -1 to remove limit (still affected by is_capped_by_modifier = yes)
#	}

#	 on_built = {
# 		owner = { set_country_flag = built_one_ministry } #an action when built
#	 }

#	on_queued = {
# 		owner = { remove_country_flag = artist_building_patron } #an action when queued
# 		this has access to the variables "local_spent_<resource>"
# 	}

#	 on_unqueued = {
#	 	owner = { set_country_flag = artist_building_patron } #an action when unqueued
# 		this has access to the variables "local_spent_<resource>"
#	 }

#	swap_type = district_generator # The type to use for all visual purposes on the parent district that this zone is built in
#	swap_type_weight = 5 # The highest weight wins. It has to be higher than 0. If there are multiple contenders with the same value, the zone order is the tie breaker

#   ai_priority = 3     # the higher this value, the more the AI and planet automation will want to use this zone to build buildings
# }
