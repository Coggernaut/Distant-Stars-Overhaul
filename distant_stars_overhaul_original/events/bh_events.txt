namespace = bio_harvest
namespace = bio_harvest_planet
namespace = nanite_forgeworld_lost
namespace = distar_overhaul

# distar_overhaul_compatibility
event = {
	id = distar_overhaul.999
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = distar_overhaul_mod_active
		log = "distar_overhaul_mod_active"
	}
}

# distar_overhaul_insight_start
# Nanite Mastery for everyone
country_event = {
	id = distar_overhaul.1
	title = "distar_overhaul_insight_start.1.name"
	desc = "distar_overhaul_insight_start.1.desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_mystic_reveal
	# Can be triggered via outcome ship_events
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 }
	trigger = {
		# has_global_flag = l_cluster_opened there is a gap and no fallback
		NOR = {
			has_country_flag = lcluster_opener
			has_country_flag = distar_overhaul_insight_started_flag
		}
	}
	immediate = { set_country_flag = distar_overhaul_insight_started_flag }
	option = {
		name = distar_overhaul_insight_start.1.a
		custom_tooltip = start_nanite_technology_mastery_chain_tooltip
		hidden_effect = { start_nanite_technology_mastery_chain = yes }
	}
}

country_event = {
	id = distar_overhaul.12000
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		last_increased_tech = tech_repeatable_nanite_technology_insight
		NOT = { has_country_flag = completed_nanite_technology_mastery_chain }
	}
	immediate = { generate_add_nanite_insight = yes }
}

# insight_finished (alternate)
country_event = {
	id = distar_overhaul.10000
	title = "nanite_technology_mastery_chain"
	desc = "distar_overhaul_insight_finished.1.desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	# trigger = { }
	option = { name = OK }
}

# Finish nanite mastery (alternate)
country_event = {
	id = distar_overhaul.10001
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		last_increased_tech = tech_nanite_technology_mastery
		NOT = { has_country_flag = completed_nanite_technology_mastery_chain }
		# NOT = { has_technology = tech_repeatable_nanite_technology_insight }
	}
	immediate = {
		# if = { limit = { NOT = { has_country_flag = completed_nanite_technology_mastery_chain } }
		set_country_flag = completed_nanite_technology_mastery_chain
		# give_technology = { tech = tech_repeatable_nanite_technology_insight message = yes }
		country_event = { id = distar_overhaul.10000 }
	}
}

# Start insight (alternate)
country_event = {
	id = distar_overhaul.10002
	title = "nanite_insight"
	desc = "distar_overhaul.2.desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	trigger = {
		last_increased_tech = tech_nanite_repair_system
		NOT = { has_country_flag = completed_nanite_technology_mastery_chain }
	}
	immediate = {
		if = {
			limit = {
				NOT = { has_country_flag = distar_overhaul_insight_started_flag }
			}
			start_nanite_technology_mastery_chain = yes
			set_country_flag = distar_overhaul_insight_started_flag
		}
	}
	option = {
		name = GOOD		# anomaly.3025.a
		give_technology = { tech = tech_repeatable_nanite_technology_insight message = no }
	}
}

# Finish Nanite Mastery
# Technology available upon gaining all insights (finishing project/lcluster_opener)
country_event = {
	id = distar_overhaul.10904
	title = "nanite_technology_mastery_chain"
	desc = "distar_overhaul.10904.desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_mystic_reveal
	# Can be triggered via outcome ship_events
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 }
	# trigger = {	}
	immediate = {
		# observer_event = { id = observer.61 }
		# Give nanite_technology_mastery alt if researched tech_lgate_activation
		# distar_overhaul_opener triggered via distar.10903
		if = {
			limit = {
				has_technology = tech_lgate_activation
				NOR = {
					has_country_flag = completed_nanite_technology_mastery_chain
					has_country_flag = distar_overhaul_opener_flag
				}
			}
			# Start Nanite Mastery for everyone
			every_playable_country = {
				limit = {
					NOR = {
						has_country_flag = lcluster_opener
						has_country_flag = distar_overhaul_insight_started_flag
					}
				}
				country_event = { id = distar_overhaul.1 }
			}
			set_country_flag = distar_overhaul_opener_flag
			give_technology = { tech = tech_repeatable_nanite_technology_insight message = no }
		}
	}
	option = {
		name = GOOD
		add_research_option = tech_nanite_technology_mastery
	}
}

# nanite_forgeworld_lost
planet_event = {
	id = nanite_forgeworld_lost.1
	title = "nanite_forgeworld_lost.1.title"
	desc = nanite_forgeworld_lost.1.desc
	picture = GFX_evt_gray_goo
	location = this
	is_triggered_only = yes
	hide_window = no
	trigger = {
		is_nanite_forgeworld = yes
		NOT = { has_planet_flag = abandon_nanite_forgeworld_flag }
		owner = {
			NOR = {
				has_origin = civic_harvester_nanites
				has_origin = civic_gateway_pursuer
			}
		}
	}
	immediate = {
		set_planet_flag = abandon_nanite_forgeworld_flag
		remove_planet_flag = pc_nanite_forgeworld
		destroy_colony = yes
		remove_deposit = d_nanite_forgeworld_deposit
	}
	after = {
		change_pc = pc_gray_goo
		add_modifier = { modifier = "terraforming_candidate" days = -1 }
		remove_planet_flag = abandon_nanite_forgeworld_flag
	}
	option = {
		name = nanite_forgeworld_lost.1.a
		add_deposit = d_nanosands
	}
}

# Begin Harvesting Planet
planet_event = {
	id = bio_harvest.1
	title = bio_harvest.1.title
	desc = bio_harvest.1.desc
	picture = GFX_evt_gray_gooed_planet
	is_triggered_only = yes
	trigger = {
		owner = {
			OR = {
				has_origin = civic_harvester_nanites
				has_origin = civic_gateway_pursuer
			}
		}
		NOR = {
			is_planet_class = pc_nuked
			merg_is_machine_world = yes
			is_nanite_forgeworld = yes
			is_artificial = yes
			merg_is_relic_world = yes
			is_planet_class = pc_bh_harvest_colony
			exists = archaeological_site
			has_planet_flag = apsr_planet
		}
	}
	# from.owner = {
	#	if = {
	#		limit = { has_ascension_perk = ap_become_the_crisis }
	#		complete_crisis_objective = crisobj_destroy_worlds
	#	}
	#}
	option = {
		name = bio_harvest.1.a
		ai_chance = {
			factor = 5
			modifier = {
				factor = 0
				owner = { has_country_flag = avoid_harvesting_nanite_gaia_worlds }
			}
		}
		hidden_effect = {
			set_planet_flag = pc_bh_harvest
			# space_owner = { country_event = { id = harvest_colony.50 } } TODO
			# If it is Nanite Gaia World
			if = {
				limit = { is_nanite_gaia = yes }
				space_owner = {
					country_event = { id = harvest_nanite_gaia.1 days = 90 }
				}
			}
			# gaia_very_large
			else_if = {
				limit = {
					is_planet_class = pc_gaia
					planet_size > 22
				}
				planet_event = { id = bio_harvest_planet.1 days = 21600 }
			}
			# gaia_large
			else_if = {
				limit = {
					is_planet_class = pc_gaia
					OR = {
						planet_size = 22
						planet_size = 21
						planet_size = 20
					}
				}
				planet_event = { id = bio_harvest_planet.1 days = 20000 }
			}
			# gaia_medium
			else_if = {
				limit = {
					is_planet_class = pc_gaia
					OR = {
						planet_size = 19
						planet_size = 18
						planet_size = 17
					}
				}
				planet_event = { id = bio_harvest_planet.1 days = 18000 }
			}
			# gaia_small
			else_if = {
				limit = {
					is_planet_class = pc_gaia
					OR = {
						planet_size = 16
						planet_size = 15
						planet_size = 14
					}
				}
				planet_event = { id = bio_harvest_planet.1 days = 16000 }
			}
			# gaia_very_small
			else_if = {
				limit = {
					is_planet_class = pc_gaia
					planet_size < 14
				}
				planet_event = { id = bio_harvest_planet.1 days = 14000 }
			}
			# very_large
			else_if = {
				limit = { planet_size > 22 }
				planet_event = { id = bio_harvest_planet.1 days = 10800 }
			}
			# large
			else_if = {
				limit = {
					OR = {
						planet_size = 22
						planet_size = 21
						planet_size = 20
					}
				}
				planet_event = { id = bio_harvest_planet.1 days = 10000 }
			}
			# medium
			else_if = {
				limit = {
					OR = {
						planet_size = 19
						planet_size = 18
						planet_size = 17
					}
				}
				planet_event = { id = bio_harvest_planet.1 days = 9000 }
			}
			# small
			else_if = {
				limit = {
					OR = {
						planet_size = 16
						planet_size = 15
						planet_size = 14
					}
				}
				planet_event = { id = bio_harvest_planet.1 days = 8000 }
			}
			# very_small
			else_if = {
				limit = { planet_size < 14 }
				planet_event = { id = bio_harvest_planet.1 days = 7000 }
			}
			every_country = {
				limit = {
					has_communications = prev.owner
					OR = {
						is_xenophile = yes
						has_civic = civic_machine_servitor
					}
				}
				add_opinion_modifier = {
					modifier = opinion_harvested_a_world
					who = prev.owner
				}
			}
		}
		hidden_effect = {
			add_modifier = { modifier = "bh_harvest_modifier" days = -1 }
			destroy_colony = yes
			change_pc = pc_bh_harvest
			clear_deposits = yes
			add_deposit = bh_harvested_planet_deposit_large
			add_deposit = d_nanosands
			create_mining_station = { owner = owner }
		}
		# gaia_very_large
		if = {
			limit = {
				is_planet_class = pc_gaia
				planet_size > 22
			}
			custom_tooltip = gaia_very_large_harvest.1.tooltip
		}
		# gaia_large
		else_if = {
			limit = {
				is_planet_class = pc_gaia
				OR = {
					planet_size = 22
					planet_size = 21
					planet_size = 20
				}
			}
			custom_tooltip = gaia_large_harvest.1.tooltip
		}
		# gaia_medium
		else_if = {
			limit = {
				is_planet_class = pc_gaia
				OR = {
					planet_size = 19
					planet_size = 18
					planet_size = 17
				}
			}
			custom_tooltip = gaia_medium_harvest.1.tooltip
		}
		# gaia_small
		else_if = {
			limit = {
				is_planet_class = pc_gaia
				OR = {
					planet_size = 16
					planet_size = 15
					planet_size = 14
				}
			}
			custom_tooltip = gaia_small_harvest.1.tooltip
		}
		# gaia_very_small
		else_if = {
			limit = {
				is_planet_class = pc_gaia
				planet_size < 14
			}
			custom_tooltip = gaia_very_small_harvest.1.tooltip
		}
		# very_large
		else_if = {
			limit = { planet_size > 22 }
			custom_tooltip = very_large_harvest.1.tooltip
		}
		# large
		else_if = {
			limit = {
				OR = {
					planet_size = 22
					planet_size = 21
					planet_size = 20
				}
			}
			custom_tooltip = large_harvest.1.tooltip
		}
		# medium
		else_if = {
			limit = {
				OR = {
					planet_size = 19
					planet_size = 18
					planet_size = 17
				}
			}
			custom_tooltip = medium_harvest.1.tooltip
		}
		# small
		else_if = {
			limit = {
				OR = {
					planet_size = 16
					planet_size = 15
					planet_size = 14
				}
			}
			custom_tooltip = small_harvest.1.tooltip
		}
		# very_small
		else_if = {
			limit = { planet_size < 14 }
			custom_tooltip = very_small_harvest.1.tooltip
		}
	}
	option = {
		name = bio_harvest.1.b
		ai_chance = { factor = 4 }
	}
}
################################################
# Prepare capital world (on_game_start_country)#
################################################
country_event = {
	id = bio_harvest.3
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		# exists = capital_scope
		OR = {
			has_origin = civic_harvester_nanites
			has_origin = civic_gateway_pursuer
			has_origin = civic_gateway_worshiper
		}
	}
	immediate = {
		#Setting up bot scavanger System
		if = {
			limit = { any_system = { has_star_flag = scavenger_bot_system } }
			every_system = { 
				limit = { has_star_flag = scavenger_bot_system } 
				spawn_megastructure = {
					type = lgate_base
					orbit_angle = 225
					orbit_distance = 40
				}
			}
		}
		#Setting up Nanite Empires
		if = {
			limit = {
				NOT = { has_origin = civic_gateway_worshiper }
			}
			capital_scope = {
				set_planet_flag = pc_nanite_forgeworld
				clear_deposits = yes
				set_planet_size = 25
				change_pc = pc_nanite_forgeworld
				every_deposit = {
					limit = { is_blocker = yes }
					clear_blocker = yes
				}
				add_deposit = d_nanite_forgeworld_deposit # Also put in on_action for terraform. Event ID bio_harvest.12
				add_district = district_nanite_forgeworld_industry
				planet_event = { id = bio_harvest.4 days = 3 } # Sets up starting world economy.
			}
			random_planet_within_border = {
				limit = { is_planet_class = pc_shattered }
				add_deposit = d_minerals_6
			} # Found this to be necessary for good deposit income.
			country_event = { id = bio_harvest_planet.0 days = 30 } # This is a flavor event that gives the player ~50 nanites at the beginning of the game after 1 month.
		}
		######################################
		#Gateway Worshipper & Gateway Pursuer#
		######################################
		if = {
			limit = {
				NOT = { has_origin = civic_harvester_nanites }
			}
			# random_system_within_border = {
			# 	limit = { is_capital_system = yes }
			# 	weights = {
			# 		base = 1
			# 		modifier = { add = 100 star = { is_star_class = sc_black_hole } }
			# 	}
			# }
			# Everything below is mostly just setting up the start-system's flavor.
			capital_scope.solar_system = {
				save_event_target_as = gateway_system
				set_star_flag = lgate
				spawn_megastructure = {
					type = lgate_base
					orbit_angle = 225
					orbit_distance = 40
				}
			}
			####################
			#Gateway Worshipper#
			####################
			if = {
				limit = { has_origin = civic_gateway_worshiper }
				#Cult of the Open Gateway Schism
				set_country_flag = starting_event
				country_event = { id = dso_story.200 days = 400 }
				capital_scope = {
					set_planet_size = 30
					reroll_deposits = yes
					every_deposit = {
						limit = { is_blocker = yes }
						clear_blocker = yes
					}
					add_building = building_stronghold
					add_modifier = { modifier = "DSO_dessanu_heritage_world" days = -1 }
					solar_system = {
						spawn_megastructure = {
							type = spy_orb_ruined
							planet = prev
						}
					}
				}
				random_planet_within_border = {
					limit = {
						distance = {
							source = root.capital_scope
							max_jumps = 4
							type = hyperlane
						}
						is_planet_class = pc_m_giant_star
					}
					clear_deposits = yes
					random_list = {
						10 = { add_deposit = d_energy_2 }
						50 = { add_deposit = d_energy_3 }
						25 = { add_deposit = d_energy_4 }
						15 = { add_deposit = d_energy_5 }
					}
				}
				random_planet_within_border = {
					limit = {
						distance = {
							source = root.capital_scope
							max_jumps = 4
							type = hyperlane
						}
						is_planet_class = pc_black_hole
					}
					clear_deposits = yes
					add_deposit = d_dark_matter_deposit_1
					random_list = {
						50 = { random_list = { 30 = { add_deposit = d_physics_3 } 40 = { add_deposit = d_physics_4 } 30 = { add_deposit = d_physics_5 } } }
						50 = { random_list = { 30 = { add_deposit = d_engineering_3 } 40 = { add_deposit = d_engineering_4 } 30 = { add_deposit = d_engineering_5 } } }
					}
				}
				random_planet_within_border = {
					limit = {
						#distance = {
						#	source = root.capital_scope
						#	max_jumps = 4
						#	type = hyperlane
						#}
						is_planet_class = pc_dessanu_relic
					}
					# create_colony = {
					#	owner = root
					#	species = owner_main_species
					#	ethos = owner
					# }
					set_owner = root
					set_controller = root
					set_name = "Abandonded Observatory"
					add_deposit = d_nanosands
					while = {
						count = 3
						add_deposit = d_nanosands
						create_pop = {
							species = owner_main_species
							ethos = owner
						}
					}
					planet_event = { id = dso_story.2015 days = 360 random = 360 }
				}
				every_orbital_station = {
					limit = {
						OR = {
							is_ship_size = mining_station
							is_ship_size = research_station
						}
					}
					dismantle = yes
				}
				every_planet_within_border = {
					limit = { has_deposit = yes }
					if = {
						limit = { has_deposit_for = shipclass_mining_station }
						create_mining_station = { owner = root }
					}
					if = {
						limit = { has_deposit_for = shipclass_research_station }
						create_research_station = { owner = root }
					}
				}
				country_event = { id = bio_harvest.5 days = 1 }
				owner_species = { set_species_flag = DSO_dessanu_heritage }
				if = {
					limit = {
						has_country_flag = is_cult_of_the_gateway_flag
						is_ai = yes
					}
					if = {
						limit = {
							has_technology = tech_starbase_2
							NOT = { has_technology = tech_starbase_3 }
						}
						give_technology = { tech = tech_starbase_3 message = no }
					}
					# random_system_within_border = { starbase = { set_starbase_size = starbase_starport } }
				}
				event_target:gateway_system = {
					closest_system = {
						limit = { is_valid_drone_expansion_destination_system = yes }
						min_steps = 2
						max_steps = 5
						set_star_flag = hostile_system
						set_star_flag = dso_story_dessanu_cult_schism_gray_goo_system
						spawn_planet = {
							class = "pc_gray_goo"
							name = "Sunder"
							location = solar_system.star
							orbit_location = yes
							orbit_angle_offset = 50
							orbit_distance_offset = 100
							size = 11
							has_ring = yes
							init_effect = {
								set_name = "Sunder"
								create_archaeological_site = dso_ancient_dessanu_battle_site
								add_deposit = d_nanosands
							}
						}
						create_ambient_object = {
							type = ancient_battlefield_02_object
							scale = 1
							location = solar_system
							entity_offset = 35
							entity_offset_angle = 210
							entity_offset_height = 10
							entity_face_object = star
							entity_scale_to_size = no
						}
						create_ambient_object = {
							type = ancient_battlefield_02_object
							scale = 1
							location = solar_system
							entity_offset = 45
							entity_offset_angle = 260
							entity_offset_height = 14
							entity_face_object = star
							entity_scale_to_size = no
						}
						create_ambient_object = {
							type = ancient_battlefield_02_object
							scale = 1
							location = solar_system
							entity_offset = 50
							entity_offset_angle = 115
							entity_offset_height = 8
							entity_face_object = star
							entity_scale_to_size = no
						}
					}
				}
			}
			start_lcluster_chain = yes
			set_country_flag = encountered_first_lgate
		}
		if = {
			limit = {
				NOT = { has_origin = civic_gateway_worshiper }
			}
			random_planet_within_border = {
				limit = {
					distance = {
						source = root.capital_scope
						max_jumps = 4
						type = hyperlane
					}
					is_planet_class = pc_m_giant_star
				}
				clear_deposits = yes
				random_list = {
					10 = { add_deposit = d_energy_2 }
					50 = { add_deposit = d_energy_3 }
					25 = { add_deposit = d_energy_4 }
					15 = { add_deposit = d_energy_5 }
				}
			}
			random_planet_within_border = {
				limit = {
					distance = {
						source = root.capital_scope
						max_jumps = 4
						type = hyperlane
					}
					is_planet_class = pc_black_hole
				}
				clear_deposits = yes
				add_deposit = d_dark_matter_deposit_1
				random_list = {
					50 = { random_list = { 30 = { add_deposit = d_physics_3 } 40 = { add_deposit = d_physics_4 } 30 = { add_deposit = d_physics_5 } } }
					50 = { random_list = { 30 = { add_deposit = d_engineering_3 } 40 = { add_deposit = d_engineering_4 } 30 = { add_deposit = d_engineering_5 } } }
				}
			}
			every_orbital_station = {
				limit = {
					OR = {
						is_ship_size = mining_station
						is_ship_size = research_station
					}
				}
				dismantle = yes
			}
			every_planet_within_border = {
				limit = { has_deposit = yes }
				if = {
					limit = { has_deposit_for = shipclass_mining_station }
					create_mining_station = { owner = root }
				}
				if = {
					limit = { has_deposit_for = shipclass_research_station }
					create_research_station = { owner = root }
				}
			}
			# planet_event = { id = bio_harvest.6 days = 1 }
			random_system_within_border = {
				limit = {
					distance = {
						source = root.capital_scope
						max_jumps = 4
						type = hyperlane
					}
				}
				weights = {
					base = 1
					modifier = { add = 100 is_valid_drone_expansion_destination_system = yes }
				}
				spawn_planet = {
					class = "pc_gray_goo"
					name = "Ember"
					location = solar_system.star
					orbit_location = yes
					orbit_angle_offset = 50
					orbit_distance_offset = 120
					size = 25
					has_ring = yes
				}
				create_ambient_object = {
					type = ancient_battlefield_02_object
					scale = 1
					location = solar_system
					entity_offset = 35
					entity_offset_angle = 210
					entity_offset_height = 10
					entity_face_object = star
					entity_scale_to_size = no
				}
				create_ambient_object = {
					type = ancient_battlefield_02_object
					scale = 1
					location = solar_system
					entity_offset = 45
					entity_offset_angle = 260
					entity_offset_height = 14
					entity_face_object = star
					entity_scale_to_size = no
				}
				create_ambient_object = {
					type = ancient_battlefield_02_object
					scale = 1
					location = solar_system
					entity_offset = 50
					entity_offset_angle = 115
					entity_offset_height = 8
					entity_face_object = star
					entity_scale_to_size = no
				}
			}
		}
	}
}

# Fix Capital
planet_event = {
	id = bio_harvest.4
	is_triggered_only = yes
	hide_window = yes
	pre_triggers = { has_owner = yes }
	immediate = {
		add_district = dso_district_generator_uncapped
		add_district = dso_district_generator_uncapped
		add_district = dso_district_generator_uncapped
		add_district = dso_district_generator_uncapped
		add_district = dso_district_nexus
		add_district = dso_district_nexus
		add_district = dso_district_nexus
	}
}

# Ensure Only 1 Gateway Guardian Exists
country_event = {
	id = bio_harvest.5
	is_triggered_only = yes
	fire_only_once = yes
	hide_window = yes
	trigger = {
		has_origin = civic_gateway_worshiper
	}
	immediate = {
		# Fallback (theoretically not possible) if 2 Guardians exist, a non-player one is destroyed
		if = {
			limit = {
				any_playable_country = {
					has_origin = civic_gateway_worshiper
					NOT = { is_same_empire = root }
				}
			}
			random_playable_country = {
				limit = { has_origin = civic_gateway_worshiper }
				weights = { base = 1 modifier = { add = 100  is_ai = yes } }
				capital_scope = {
					planet_event = { id = bio_harvest.6 days = 1 }
					solar_system = { set_star_class = sc_black_hole }
				}
				# random_system_within_border = { set_star_class = sc_black_hole }
				random_owned_megastructure = {
					limit = { is_megastructure_type = spy_orb_ruined }
					delete_megastructure = this
				}
				every_planet_within_border = {
					limit = {
						distance = {
							source = root.capital_scope
							max_jumps = 4
							type = hyperlane
						}
						is_star = no
						is_homeworld = no
					}
					remove_planet = yes
				}
				destroy_country = yes
			}
			random_playable_country = {
				limit = { has_origin = civic_gateway_worshiper }
				# Generates system for Lost Dessanu Colony.
				capital_scope = {
					spawn_system = {
						min_jumps = 4
						max_jumps = 4
						initializer = cult_of_the_open_gate_system
						hyperlane = yes
						is_discovered = no
					}
				}
			}
		}
		else = {
			# Generates system for Lost Dessanu Colony.
			capital_scope = {
				spawn_system = {
					min_jumps = 4
					max_jumps = 4
					initializer = cult_of_the_open_gate_system
					hyperlane = yes
					is_discovered = no
				}
			}
		}
	}
}

# Removes Capital Planet.
planet_event = {
	id = bio_harvest.6
	is_triggered_only = yes
	hide_window = yes
	immediate = { remove_planet = yes }
}

# Unused
# Ensure Only 1 Gateway Pursuer Exists
country_event = {
	id = bio_harvest.7
	is_triggered_only = yes
	fire_only_once = yes
	hide_window = yes
	trigger = {
		has_origin = civic_gateway_pursuer
	}
	immediate = {
		# If 2 Guardians exist, a non-player one is destroyed
		if = {
			limit = {
				any_playable_country = {
					has_origin = civic_gateway_pursuer
					NOT = { is_same_empire = root }
				}
			}
			random_playable_country = {
				limit = { has_origin = civic_gateway_pursuer }
				weights = { base = 1 modifier = { add = 100  is_ai = yes } }
				capital_scope = {
					planet_event = { id = bio_harvest.6 days = 1 }
					solar_system = { set_star_class = sc_black_hole }
				}
				# random_owned_megastructure = {
				#	limit = { is_megastructure_type = spy_orb_ruined }
				#	delete_megastructure = this
				# }
				every_planet_within_border = {
					limit = {
						distance = {
							source = root.capital_scope
							max_jumps = 1
							type = hyperlane
						}
						is_star = no
						is_homeworld = no
					}
					remove_planet = yes
				}
				destroy_country = yes
			}
		}
	}
}

# Direct Commands, won't be triggered in-game?
# -------------------------------------------
# Create a Harvested World
planet_event = {
	id = bio_harvest.10
	is_triggered_only = yes
	hide_window = yes
	is_test_event = yes
	immediate = {
		add_modifier = { modifier = "bh_harvested_modifier" days = -1 }
		change_pc = pc_bh_harvest
		clear_deposits = yes
		add_deposit = bh_harvested_planet_deposit_large
	}
}

# Reset Harvested Worlds
planet_event = {
	id = bio_harvest.11
	is_triggered_only = yes
	hide_window = yes
	trigger = { is_planet_class = pc_bh_harvest }
	is_test_event = yes
	immediate = {
		remove_modifier = "bh_harvested_modifier"
		remove_modifier = "bh_harvest_modifier"
		change_pc = pc_barren
		clear_deposits = yes
	}
}

planet_event = {
	id = bio_harvest.12
	is_triggered_only = yes
	trigger = { 
		is_planet_class = pc_nanite_forgeworld 
		NOT = { has_deposit = d_nanite_forgeworld_deposit }
	}
	hide_window = yes
	immediate = { 
		add_deposit = d_nanite_forgeworld_deposit
		add_district = district_nanite_forgeworld_industry
	}
}

# ----------------------------------------------------------------------------------
#								Harvest Stages
# ----------------------------------------------------------------------------------

# Harvester grey_goo planet (on first month after game start)
country_event = {
	id = bio_harvest_planet.0
	title = harvest_nanite_planet.1.name
	desc = harvest_nanite_planet.1.desc # TODO
	picture = GFX_evt_gray_gooed_planet
	show_sound = event_laboratory_sound
	# location = root
	is_triggered_only = yes
	trigger = {
		any_planet_within_border = {
			is_capital = no
			is_planet_class = pc_gray_goo
		}
	}
	option = {
		name = harvest_nanite_planet.1.a
		# custom_tooltip = harvest_nanite_planet.1.a.tooltip
		add_resource = { nanites = 50 }
		custom_tooltip = terraforming_candidate
		hidden_effect = {
			random_planet_within_border = {
				limit = {
					is_capital = no
					is_planet_class = pc_gray_goo
				}
				add_modifier = { modifier = "terraforming_candidate" }
			}
		}
	}
}

# Depreciate Level Medium Stage_2
planet_event = {
	id = bio_harvest_planet.1
	hide_window = yes	# TODO: Make as notify event!?
	trigger = { is_planet_class = pc_bh_harvest }
	is_triggered_only = yes
	immediate = {
		# gaia_very_large
		if = {
			limit = {
				is_planet_class = pc_gaia
				planet_size > 22
			}
			planet_event = { id = bio_harvest_planet.2 days = 14400 }
		}
		# gaia_large
		if = {
			limit = {
				is_planet_class = pc_gaia
				OR = {
					planet_size = 22
					planet_size = 21
					planet_size = 20
				}
			}
			planet_event = { id = bio_harvest_planet.2 days = 13400 }
		}
		# gaia_medium
		if = {
			limit = {
				is_planet_class = pc_gaia
				OR = {
					planet_size = 19
					planet_size = 18
					planet_size = 17
				}
			}
			planet_event = { id = bio_harvest_planet.2 days = 12400 }
		}
		# gaia_small
		if = {
			limit = {
				is_planet_class = pc_gaia
				OR = {
					planet_size = 16
					planet_size = 15
					planet_size = 14
				}
			}
			planet_event = { id = bio_harvest_planet.2 days = 11400 }
		}
		# gaia_very_small
		if = {
			limit = {
				is_planet_class = pc_gaia
				planet_size < 14
			}
			planet_event = { id = bio_harvest_planet.2 days = 10400 }
		}
		# very_large
		if = {
			limit = { planet_size > 22 }
			planet_event = { id = bio_harvest_planet.2 days = 7200 }
		}
		# large
		if = {
			limit = {
				OR = {
					planet_size = 22
					planet_size = 21
					planet_size = 20
				}
			}
			planet_event = { id = bio_harvest_planet.2 days = 6700 }
		}
		# medium
		if = {
			limit = {
				OR = {
					planet_size = 19
					planet_size = 18
					planet_size = 17
				}
			}
			planet_event = { id = bio_harvest_planet.2 days = 6200 }
		}
		# small
		if = {
			limit = {
				OR = {
					planet_size = 16
					planet_size = 15
					planet_size = 14
				}
			}
			planet_event = { id = bio_harvest_planet.2 days = 5700 }
		}
		# very_small
		if = {
			limit = { planet_size < 14 }
			planet_event = { id = bio_harvest_planet.2 days = 5200 }
		}
		clear_deposits = yes
		add_deposit = bh_harvested_planet_deposit_moderate
		add_deposit = d_nanosands
	}
	# option = {
	# 	name = OK
	# 	custom_tooltip = bio_harvest.1.tooltip
	# 	hidden_effect = {
	# 	}
	# }
}

# Depreciate Level Low Stage_3
planet_event = {
	id = bio_harvest_planet.2
	hide_window = yes	# TODO: Make as notify event!?
	trigger = { is_planet_class = pc_bh_harvest }
	is_triggered_only = yes
	immediate = {
		# gaia_very_large
		if = {
			limit = {
				is_planet_class = pc_gaia
				planet_size > 22
			}
			planet_event = { id = bio_harvest_planet.3 days = 7200 }
		}
		# gaia_large
		if = {
			limit = {
				is_planet_class = pc_gaia
				OR = {
					planet_size = 22
					planet_size = 21
					planet_size = 20
				}
			}
			planet_event = { id = bio_harvest_planet.3 days = 6500 }
		}
		# gaia_medium
		if = {
			limit = {
				is_planet_class = pc_gaia
				OR = {
					planet_size = 19
					planet_size = 18
					planet_size = 17
				}
			}
			planet_event = { id = bio_harvest_planet.3 days = 6200 }
		}
		# gaia_small
		if = {
			limit = {
				is_planet_class = pc_gaia
				OR = {
					planet_size = 16
					planet_size = 15
					planet_size = 14
				}
			}
			planet_event = { id = bio_harvest_planet.3 days = 5700 }
		}
		# gaia_very_small
		if = {
			limit = {
				is_planet_class = pc_gaia
				planet_size < 14
			}
			planet_event = { id = bio_harvest_planet.3 days = 5200 }
		}
		# very_large
		if = {
			limit = { planet_size > 22 }
			planet_event = { id = bio_harvest_planet.3 days = 3600 }
		}
		# large
		if = {
			limit = {
				OR = {
					planet_size = 22
					planet_size = 21
					planet_size = 20
				}
			}
			planet_event = { id = bio_harvest_planet.3 days = 3350 }
		}
		# medium
		if = {
			limit = {
				OR = {
					planet_size = 19
					planet_size = 18
					planet_size = 17
				}
			}
			planet_event = { id = bio_harvest_planet.3 days = 3100 }
		}
		# small
		if = {
			limit = {
				OR = {
					planet_size = 16
					planet_size = 15
					planet_size = 14
				}
			}
			planet_event = { id = bio_harvest_planet.3 days = 2850 }
		}
		# very_small
		if = {
			limit = { planet_size < 14 }
			planet_event = { id = bio_harvest_planet.3 days = 2600 }
		}
		clear_deposits = yes
		add_deposit = bh_harvested_planet_deposit_small
		add_deposit = d_nanosands
	}
	# option = {
	# 	name = OK
	# 	custom_tooltip = bio_harvest.1.tooltip
	# 	hidden_effect = {
	# 	}
	# }
}

# ----------------------------------------------------------------------------------
#								Harvest Depleted
# ----------------------------------------------------------------------------------
# Depleted
planet_event = {
	id = bio_harvest_planet.3
	hide_window = yes	# TODO: Make as notify event!?
	is_triggered_only = yes
	trigger = { is_planet_class = pc_bh_harvest }
	immediate = {
		remove_planet_flag = pc_bh_harvest
		add_modifier = { modifier = "bh_harvested_modifier" days = -1 }
		remove_modifier = "bh_harvest_modifier"
		change_pc = pc_gray_goo
		add_deposit = d_nanosands
		remove_planet_flag = pc_bh_harvest
		add_modifier = { modifier = "terraforming_candidate" days = -1 }
	}
	# option = {
	# 	name = OK
	# 	custom_tooltip = bio_harvest.1.tooltip
	# 	hidden_effect = {
	# 	}
	# }
}
